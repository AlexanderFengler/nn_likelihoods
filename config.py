import numpy as np
import yaml
import pickle
import cddm_data_simulation as cd
#import clba
import boundary_functions as bf
import os

# "output_folder": "/users/afengler/data/kde/test/method_comparison/",
# "model_folder": "/users/afengler/data/kde/test/keras_models/",
# #"custom_objects": {"huber_loss": tf.losses.huber_loss},
# #"fcn_custom_objects": {"heteroscedastic_loss": tf.losses.huber_loss}, 

config = dict()

config['model_paths'] = yaml.load(open("model_paths_simple.yaml"))

# Add machine basic folders here
config['base_data_folder'] = {'af_x7': '/media/data_cifs/projects/...', 
                              'af_ccv': '/users/afengler/data/proj_nn_likelihoods/',
                              'af_home': '/Users/afengler/OneDrive/project_nn_likelihoods/data/nn_likelihoods/',
                              'default': ''}

# Network params
config['mlp_hyperparameters'] = {'hidden_layers': [100, 100, 120, 1],
                                 'hidden_activations': ["tanh", "tanh", "tanh", "linear"],
                                 'filters': [128, 128, 128, 128],
                                 'batch_size': 100000,
                                 'n_epochs': 100, # CHANGE AGAINs
                                 'learning_rate': .002, # I think was originally 0.0002
                                 'momentum': .7,
                                 'model_type': "dnnregressor",
                                 'optimizer': "adam",
                                 'log': True,
                                 'loss': "huber",
                                 'gpu_x7': '2'}

config['mlp_simulation_filters'] =  {'mode': 20, # != (if mode is max_rt)
                                     'choice_cnt': 10, # > (each choice receive at least 10 samples in simulator)
                                     'mean_rt': 15, # < (mean_rt is smaller than specified value
                                     'std': 0, # > (std is positive for each choice)
                                     'mode_cnt_rel': 0.5  # < (mode does not receive more than a proportion of samples for each choice)
                                    }

config['model_data'] = {
"test":{
    "dgp": cd.test,
    "boundary": bf.constant,
    "boundary_multiplicative": True,
    "folder_suffix":'models/test/',
    "param_names": ['v', 'a', 'w', 'ndt'],
    "boundary_param_names": [], 
    "param_bounds_network": [[-2.0, 2.0], [0.3, 2], [0.2, 0.8], [0.0, 2.0]],
    "param_bounds_sampler": [[-1.9, 1.9], [0.6, 1.4], [0.31, 0.69], [0.1, 0.9]],
    "param_bounds_cnn": [[-2.5, 2.5], [0.2, 2], [0.1, 0.9], [0.0, 2.0]],
    "boundary_param_bounds_network": [],
    "boundary_param_bounds_sampler": [],
    "boundary_param_bounds_cnn":[],
    "dgp_hyperparameters": dict([['s', 1.0], 
                            ['delta_t', 0.01], 
                            ['max_t', 20], 
                            ['n_samples', 20000], 
                            ['print_info', False],
                            ['boundary', bf.constant],
                            ['boundary_multiplicative', True],
                            ['possible_choices', [-1, 1]]])
     },
"levy":{
    "dgp": cd.levy_flexbound,
    "boundary": bf.constant,
    "boundary_multiplicative": True,
    "folder_suffix":'models/levy',
    "param_names": ['v', 'a', 'w', 'alpha-diff', 'ndt'],
    "boundary_param_names": [], 
    "param_bounds_network": [[-3.0, 3.0], [0.3, 2.0], [0.1, 0.9], [1.0, 2.0], [0.0, 2.0]],
    "param_bounds_sampler": [[-2.7, 2.7], [0.4, 1.7], [0.3, 0.7], [1.1, 1.9], [0.1, 1.9]],
    "param_bounds_cnn": [[-3, 3], [0.3, 2], [0.1, 0.9], [1.0, 2.0], [0.0, 2.0]],
    "boundary_param_bounds_network": [],
    "boundary_param_bounds_sampler": [],
    "boundary_param_bounds_cnn":[],
    "dgp_hyperparameters": dict([['s', 1.0], 
                            ['delta_t', 0.01], 
                            ['max_t', 20], 
                            ['n_samples', 20000], 
                            ['print_info', False],
                            ['boundary', bf.constant],
                            ['boundary_multiplicative', True],
                            ['possible_choices', [-1, 1]]])
    },
"ddm":{
    "dgp": cd.ddm_flexbound,
    "boundary": bf.constant,
    "boundary_multiplicative": True,
    "folder_suffix": 'models/ddm/',
    "param_names": ['v', 'a', 'w', 'ndt'],
    "boundary_param_names": [],  
    "param_bounds_network": [[-3.0, 3.0], [0.3, 2.5], [0.1, 0.9], [0.0, 2.0]],
    "param_bounds_sampler": [[-2.5, 2.5], [0.5, 2.2], [0.25, 0.75], [0.05, 1.95]],
    "param_bounds_cnn": [[-3.0, 3.0], [0.3, 2.5], [0.1, 0.9], [0.0, 2.0]],
    "boundary_param_bounds_network": [],
    "boundary_param_bounds_sampler": [],
    "boundary_param_bounds_cnn":[],
    "dgp_hyperparameters": dict([['s', 1.0], 
                            ['delta_t', 0.01], 
                            ['max_t', 20], 
                            ['n_samples', 20000],
                            ['print_info', False],
                            ['boundary', bf.constant],
                            ['boundary_multiplicative', True],
                            ['possible_choices', [-1, 1]]]),
    },
"ddm_elife":{
    "dgp": cd.ddm_flexbound,
    "boundary": bf.constant,
    "boundary_multiplicative": True,
    "folder_suffix": 'models/ddm_elife',
    "param_names": ['v', 'a', 'w', 'ndt'],
    "boundary_param_names": [],
    "param_bounds_network": [[-3.0, 3.0], [0.3, 2.5], [0.1, 0.9], [0.0, 2.0]],
    "param_bounds_sampler": [[-2.5, 2.5], [0.5, 2.2], [0.25, 0.75], [0.05, 1.95]],
    "param_bounds_cnn": [[-3.0, 3.0], [0.3, 2.5], [0.1, 0.9], [0.0, 2.0]],
    "boundary_param_bounds_network": [],
    "boundary_param_bounds_sampler": [],
    "boundary_param_bounds_cnn":[],
    "dgp_hyperparameters": dict([['s', 1.0], 
                            ['delta_t', 0.01], 
                            ['max_t', 20], 
                            ['n_samples', 20000],
                            ['print_info', False],
                            ['boundary', bf.constant],
                            ['boundary_multiplicative', True],
                            ['possible_choices', [-1, 1]]]),
    },
"ddm_analytic":{
    "dgp": cd.ddm_flexbound,
    "boundary": bf.constant,
    "boundary_multiplicative": True,
    "folder_suffix": 'models/ddm_analytic/',
    "param_names": ['v', 'a', 'w', 'ndt'],
    "boundary_param_names": [],
    "boundary_param_bounds_sampler": [],
    "boundary_param_bounds_network": [],
    "boundary_param_bounds_cnn": [],
    "param_bounds_network": [[-3.0, 3.0], [0.3, 2.5], [0.1, 0.9], [0.0, 2.0]],
    "param_bounds_sampler": [[-2.5, 2.5], [0.5, 2.2], [0.25, 0.75], [0.05, 1.95]],
    "param_bounds_cnn": [[-3.0, 3.0], [0.2, 2.2], [0.1, 0.9], [0.0, 2.0]],
    "dgp_hyperparameters": dict([['s', 1.0], 
                            ['delta_t', 0.001], 
                            ['max_t', 20], 
                            ['n_samples', 20000], 
                            ['print_info', False],
                            ['boundary', bf.constant],
                            ['boundary_multiplicative', True],
                            ['possible_choices', [-1, 1]]]),
    },
"ddm_analytic_elife":{
    "dgp": cd.ddm_flexbound,
    "boundary": bf.constant,
    "boundary_multiplicative": True,
    "folder_suffix": 'models/ddm_analytic_elife/',
    "param_names": ['v', 'a', 'w', 'ndt'],
    "boundary_param_names": [],
    "boundary_param_bounds_sampler": [],
    "boundary_param_bounds_network": [],
    "boundary_param_bounds_cnn": [],
    "param_bounds_network": [[-3.0, 3.0], [0.3, 2.5], [0.1, 0.9], [0.0, 2.0]],
    "param_bounds_sampler": [[-2.5, 2.5], [0.5, 2.2], [0.25, 0.75], [0.05, 1.95]], 
    "param_bounds_cnn": [[-3.0, 3.0], [0.2, 2.2], [0.1, 0.9], [0.0, 2.0]],
    "dgp_hyperparameters": dict([['s', 1.0], 
                            ['delta_t', 0.001], 
                            ['max_t', 20], 
                            ['n_samples', 20000], 
                            ['print_info', False],
                            ['boundary', bf.constant],
                            ['boundary_multiplicative', True],
                            ['possible_choices', [-1, 1]]]),
    },
"ddm_sdv_analytic":{
    "dgp": cd.ddm_sdv,
    "boundary": bf.constant,
    "boundary_multiplicative": True,
    "folder_suffix": 'models/ddm_sdv_analytic/',
    "param_names": ["v", "a", "w", "ndt", "sdv"],
    "boundary_param_names": [],
    "param_bounds_network": [[-3, 3], [0.3, 2.5], [0.1, 0.9], [0.0, 2.0], [0.0, 2.5]],
    "param_bounds_sampler": [[-2.2, 2.2], [0.5, 2.2], [0.25, 0.75], [0.05, 1.95], [0.3, 2.2]],
    "param_bounds_cnn": [[-3, 3], [0.3, 2.5], [0.1, 0.9], [0.0, 2.0], [0.0, 2.5]],
    "boundary_param_bounds_network": [],
    "boundary_param_bounds_sampler": [],
    "boundary_param_bounds_cnn": [],
    "dgp_hyperparameters": dict([['s', 1.0], 
                            ['delta_t', 0.001],
                            ['max_t', 20], 
                            ['n_samples', 20000], 
                            ['print_info', False],
                            ['boundary', bf.constant],
                            ['boundary_multiplicative', True],
                            ['possible_choices', [-1, 1]]]),
    },
"ddm_sdv_analytic_elife":{
    "dgp": cd.ddm_sdv,
    "boundary": bf.constant,
    "boundary_multiplicative": True,
    "folder_suffix": 'models/ddm_sdv_analytic_elife/',
    "param_names": ["v", "a", "w", "ndt", "sdv"],
    "boundary_param_names": [],
    "param_bounds_network": [[-3, 3], [0.3, 2.5], [0.1, 0.9], [0.0, 2.0], [0.0, 2.5]],
    "param_bounds_sampler": [[-2.2, 2.2], [0.5, 2.2], [0.25, 0.75], [0.05, 1.95], [0.3, 2.2]],
    "param_bounds_cnn": [[-3, 3], [0.3, 2.5], [0.1, 0.9], [0.0, 2.0], [0.0, 2.5]],
    "boundary_param_bounds_network": [],
    "boundary_param_bounds_sampler": [],
    "boundary_param_bounds_cnn": [],
    "dgp_hyperparameters": dict([['s', 1.0], 
                            ['delta_t', 0.001],
                            ['max_t', 20], 
                            ['n_samples', 20000], 
                            ['print_info', False],
                            ['boundary', bf.constant],
                            ['boundary_multiplicative', True],
                            ['possible_choices', [-1, 1]]]),
    },
"ddm_sdv":{
    "dgp": cd.ddm_sdv,
    "boundary": bf.constant,
    "boundary_multiplicative": True,
    "folder_suffix": "models/ddm_sdv/",
    "param_names": ["v", "a", "w", "ndt", "sdv"],
    "boundary_param_names": [],
    "param_bounds_network": [[- 2.5, 2.5], [0.3, 2.5], [0.1, 0.9], [0.0, 2.0], [0.0, 2.5]],
    "param_bounds_sampler": [[- 2.2, 2.2], [0.5, 2.2], [0.25, 0.75], [0.05, 1.95], [0.3, 2.2]],
    "param_bounds_cnn": [[- 3, 3], [0.3, 2.5], [0.1, 0.9], [0.0, 2.0], [0.0, 2.5]],
    "boundary_param_bounds_network": [],
    "boundary_param_bounds_sampler": [],
    "boundary_param_bounds_cnn": [],
    "dgp_hyperparameters": dict([['s', 1.0], 
                            ['delta_t', 0.001],
                            ['max_t', 20], 
                            ['n_samples', 20000], 
                            ['print_info', False],
                            ['boundary', bf.constant],
                            ['boundary_multiplicative', True],
                            ['possible_choices', [-1, 1]]]),
    },
"ddm_sdv_elife":{
    "dgp": cd.ddm_sdv,
    "boundary": bf.constant,
    "boundary_multiplicative": True,
    "folder_suffix": "models/ddm_sdv_elife/",
    "param_names": ["v", "a", "w", "ndt", "sdv"],
    "boundary_param_names": [],
    "param_bounds_network": [[-2.5, 2.5], [0.3, 2.5], [0.1, 0.9], [0.0, 2.0], [0.0, 2.5]],
    "param_bounds_sampler": [[-2.2, 2.2], [0.5, 2.2], [0.25, 0.75], [0.05, 1.95], [0.3, 2.2]],
    "param_bounds_cnn": [[-3, 3], [0.3, 2.5], [0.1, 0.9], [0.0, 2.0], [0.0, 2.5]],
    "boundary_param_bounds_network": [],
    "boundary_param_bounds_sampler": [],
    "boundary_param_bounds_cnn": [],
    "dgp_hyperparameters": dict([['s', 1.0], 
                            ['delta_t', 0.001],
                            ['max_t', 20], 
                            ['n_samples', 20000], 
                            ['print_info', False],
                            ['boundary', bf.constant],
                            ['boundary_multiplicative', True],
                            ['possible_choices', [-1, 1]]]),
    },
"angle":{
    "dgp": cd.ddm_flexbound,
    "boundary": bf.angle,
    "boundary_multiplicative": False,
    "folder_suffix": "models/angle/",
    "param_names": ["v", "a", "w", "ndt"],
    "boundary_param_names": ["theta"],
    "param_bounds_network": [[-2.0, 2.0], [0.3, 2], [0.2, 0.8], [0.0, 2.0]],
    "param_bounds_sampler": [[-1.9, 1.9], [0.4, 1.9], [0.25, 0.75], [0.1, 1.9]],
    "param_bounds_cnn": [[-2.5, 2.5], [0.2, 2.0], [0.1, 0.9], [0.0, 2.0]],
    'boundary_param_bounds_network':[[0, (np.pi / 2 - .1)]],
    "boundary_param_bounds_sampler": [[0.05, np.pi / 2 - .3]],
    "boundary_param_bounds_cnn": [[0, (np.pi / 2 - .2)]],
    "dgp_hyperparameters": dict([['s', 1.0], 
                            ['delta_t', 0.01], 
                            ['max_t', 20], 
                            ['n_samples', 20000], 
                            ['print_info', False],
                            ['boundary', bf.angle],
                            ['boundary_multiplicative', False],
                            ['possible_choices', [-1, 1]]]),
    },
"angle2":{
    "dgp": cd.ddm_flexbound,
    "boundary": bf.angle,
    "boundary_multiplicative": False,
    "folder_suffix": "models/angle2/",
    "param_names": ["v", "a", "w", "ndt"],
    "boundary_param_names": ["theta"],
    "param_bounds_network": [[-3.0, 3.0], [0.3, 2], [0.2, 0.8], [0.0, 2.0]],
    "param_bounds_sampler": [[-2.7, 2.7], [0.4, 1.7], [0.3, 0.7], [0.1, 1.9]],
    "param_bounds_cnn": [[-3.0, 3.0], [0.3, 2], [0.1, 0.9], [0.0, 2.0]],
    'boundary_param_bounds_network':[[- .1, (np.pi / 2 - .1)]],
    "boundary_param_bounds_sampler": [[- 0.05, np.pi / 2 - .3]],
    "boundary_param_bounds_cnn": [[0, (np.pi / 2 - .2)]],
    "dgp_hyperparameters": dict([['s', 1.0], 
                            ['delta_t', 0.01], 
                            ['max_t', 20], 
                            ['n_samples', 20000], 
                            ['print_info', False],
                            ['boundary', bf.angle],
                            ['boundary_multiplicative', False],
                            ['possible_choices', [-1, 1]]]),
    },
"weibull_cdf":{
    "dgp": cd.ddm_flexbound,
    "boundary": bf.weibull_cdf,
    "boundary_multiplicative": True,
    "folder_suffix": "models/weibull_cdf/",
    "param_names": ["v", "a", "w", "ndt"],
    "boundary_param_names": ["alpha", "beta"],
    "param_bounds_network": [[-2.0, 2.0], [0.3, 2], [0.2, 0.8], [0.0, 2.0]],
    "param_bounds_sampler": [[-1.9, 1.9], [0.4, 1.9], [0.25, 0.75], [0.1, 1.9]],
    "param_bounds_cnn": [[-2.5, 2.5], [0.2, 2.0], [0.1, 0.9], [0.0, 2.0]],
    "boundary_param_bounds_network": [[0.3, 5.0], [0.3, 7.0]],
    "boundary_param_bounds_sampler": [[0.55, 4.95], [0.55, 6.95]],
    "boundary_param_bounds_cnn": [[0.5, 5.0], [0.5, 7.0]],
    "dgp_hyperparameters": dict([['s', 1.0], 
                            ['delta_t', 0.01], 
                            ['max_t', 20], 
                            ['n_samples', 20000], 
                            ['print_info', False],
                            ['boundary', bf.weibull_cdf],
                            ['boundary_multiplicative', True],
                            ['possible_choices', [-1, 1]]]),
    },
"weibull_cdf2":{
    "dgp": cd.ddm_flexbound,
    "boundary": bf.weibull_cdf,
    "boundary_multiplicative": True,
    "folder_suffix": "models/weibull_cdf2/",
    "param_names": ["v", "a", "w", "ndt"],
    "boundary_param_names": ["alpha", "beta"],
    "param_bounds_network": [[-3.0, 3.0], [0.3, 2], [0.2, 0.8], [0.0, 2.0]],
    "param_bounds_sampler": [[-2.7, 2.7], [0.4, 1.7], [0.3, 0.7], [0.1, 1.9]],
    "param_bounds_cnn": [[-3.0, 3.0], [0.3, 2.0], [0.1, 0.9], [0.0, 2.0]],
    "boundary_param_bounds_network": [[0.3, 5.0], [0.3, 7.0]],
    "boundary_param_bounds_sampler": [[0.5, 4.5], [0.5, 6.5]],
    "boundary_param_bounds_cnn": [[0.3, 5.0], [0.3, 7.0]],
    "dgp_hyperparameters": dict([['s', 1.0], 
                            ['delta_t', 0.01], 
                            ['max_t', 20], 
                            ['n_samples', 20000], 
                            ['print_info', False],
                            ['boundary', bf.weibull_cdf],
                            ['boundary_multiplicative', True],
                            ['possible_choices', [-1, 1]]]),
    },
"weibull_cdf_ext":{
    "dgp": cd.ddm_flexbound,
    "boundary": bf.weibull_cdf,
    "boundary_multiplicative": True,
    "folder_suffix": "models/weibull_cdf_ext/",
    "param_names": ["v", "a", "w", "ndt"],
    "boundary_param_names": ["alpha", "beta"],
    "param_bounds_network": [[-2.5, 2.5], [0.3, 2.5], [0.2, 0.8], [0.0, 2.0]],
    "param_bounds_sampler": [[-2.2, 2.2], [0.5, 2.2], [0.3, 0.7], [0.1, 1.9]],
    "param_bounds_cnn": [[-2.5, 2.5], [0.3, 2.5], [0.2, 0.8], [0.0, 2.0]],
    "boundary_param_bounds_network": [[0.3, 5.0], [0.3, 7.0]],
    "boundary_param_bounds_sampler": [[0.5, 4.5], [0.5, 6.5]],
    "boundary_param_bounds_cnn": [[0.3, 5.0], [0.3, 7.0]],
    "dgp_hyperparameters": dict([['s', 1.0], 
                            ['delta_t', 0.01], 
                            ['max_t', 20], 
                            ['n_samples', 20000], 
                            ['print_info', False],
                            ['boundary', bf.weibull_cdf],
                            ['boundary_multiplicative', True],
                            ['possible_choices', [-1, 1]]]),
    },
"ornstein":{
    "dgp": cd.ornstein_uhlenbeck,
    "boundary": bf.constant,
    "boundary_multiplicative": True,
    "folder_suffix": "models/ornstein/",
    "param_names": ["v", "a", "w", "g", "ndt"],
    'param_bounds_network': [[-2.0, 2.0], [0.3, 2], [0.2, 0.8], [-1.0, 1.0], [0.0, 2.0]],
    "param_bounds_sampler": [[-1.9, 1.9], [0.4, 1.9], [0.25, 0.75], [-0.9, 0.9], [0.1, 1.9]],
    "param_bounds_cnn": [[-2.5, 2.5], [0.2, 2.0], [0.1, 0.9], [-1.0, 1.0], [0.0, 2.0]],
    "boundary_param_names": [],
    "boundary_param_bounds_network": [],
    "boundary_param_bounds_sampler": [],
    "boundary_param_bounds_cnn": [],
    "dgp_hyperparameters": dict([['s', 1.0], 
                            ['delta_t', 0.01], 
                            ['max_t', 20], 
                            ['n_samples', 20000], 
                            ['print_info', False],
                            ['boundary', bf.constant],
                            ['boundary_multiplicative', True],
                            ['possible_choices', [-1, 1]]]),
    },
"full_ddm":{
    "dgp": cd.full_ddm,
    "boundary": bf.constant,
    "boundary_multiplicative": True,
    "folder_suffix": "models/full_ddm/",
    "param_names": ["v", "a", "w", "ndt", "dw", "sdv", "dndt"],
    "boundary_param_names": [],
    "param_bounds_network": [[-2.0, 2.0], [0.3, 2], [0.3, 0.7], [0.25, 2.25], [0.0, 0.4], [0, 0.5], [0.0, 0.25]],
    "param_bounds_sampler": [[-1.9, 1.9], [0.4, 1.9], [0.25, 0.65], [0.3, 2.2], [0.05, 0.35], [0.05, 0.45], [0.05, 0.2]],
    "param_bounds_cnn": [[-2.5, 2.5], [0.2, 2.0], [0.1, 0.9], [0.25, 2.5], [0.0, 0.2], [0.0, 1.0], [0.0, 0.25]],
    "boundary_param_bounds_network": [],
    "boundary_param_bounds_sampler": [],
    "boundary_param_bounds_cnn": [],
    "dgp_hyperparameters": dict([['s', 1.0], 
                            ['delta_t', 0.01],
                            ['max_t', 20], 
                            ['n_samples', 20000], 
                            ['print_info', False],
                            ['boundary', bf.constant],
                            ['boundary_multiplicative', True],
                            ['possible_choices', [-1, 1]]]),
    },
"full_ddm2":{
    "dgp": cd.full_ddm,
    "boundary": bf.constant,
    "boundary_multiplicative": True,
    "folder_suffix": "models/full_ddm2/",
    "param_names": ["v", "a", "w", "ndt", "dw", "sdv", "dndt"],
    "boundary_param_names": [],
    "param_bounds_network": [[-3.0, 3.0], [0.3, 2.5], [0.3, 0.7], [0.25, 2.25], [0.0, 0.2], [0.0, 2.0], [0.0, 0.25]],
    "param_bounds_sampler": [[-2.5, 2.5], [0.5, 2.2], [0.35, 0.65], [0.3, 2.2], [0.05, 0.25], [0.0, 1.7], [0.05, 0.2]],
    "param_bounds_cnn": [[-3.0, 3.0], [0.3, 2.5], [0.3, 0.7], [0.25, 2.25], [0.0, 0.2], [0.0, 2.0], [0.0, 0.25]],
    "boundary_param_bounds_network": [],
    "boundary_param_bounds_sampler": [],
    "boundary_param_bounds_cnn": [],
    "dgp_hyperparameters": dict([['s', 1.0], 
                            ['delta_t', 0.01],
                            ['max_t', 20], 
                            ['n_samples', 20000], 
                            ['print_info', False],
                            ['boundary', bf.constant],
                            ['boundary_multiplicative', True],
                            ['possible_choices', [-1, 1]]]),
    },
"race_3":{
    "dgp": cd.race_model,
    "boundary": bf.constant, 
    "boundary_multiplicative": True,
    "folder_suffix": "models/race_3/",
    "param_names": ["v_0", "v_1", "v_2", "a", "w_0", "w_1", "w_2", "ndt"],
    "boundary_param_names": [],
    "param_bounds_network":[[0, 2.0], [0, 2.0], [0, 2.0], [1.0, 3.0], [0.2, 0.8], [0.2, 0.8], [0.2, 0.8], [0.0, 1.0]],
    "param_bounds_sampler": [[0.1, 1.9], [0.1, 1.9], [0.1, 1.9], [1.1, 2.9], [0.21, 0.79], [0.21, 0.79], [0.21, 0.79], [0.1, 0.9]],
    "param_bounds_cnn": [[0.0, 2.5], [0.0, 2.5], [0.0, 2.5], [1.0, 3.0], [0.1, 0.9], [0.1, 0.9], [0.1, 0.9], [0.0, 2.0]],
    "boundary_param_bounds_network": [],
    "boundary_param_bounds_sampler": [],
    "boundary_param_bounds_cnn": [],
    "dgp_hyperparameters": dict([['s', 1.0], 
                            ['delta_t', 0.01], 
                            ['max_t', 20], 
                            ['n_samples', 20000], 
                            ['print_info', False],
                            ['boundary', bf.constant],
                            ['boundary_multiplicative', True],
                            ['possible_choices', [0, 1, 2]]]),
},
"race_4":{
    "dgp": cd.race_model,
    "boundary": bf.constant, 
    "boundary_multiplicative": True,
    "folder_suffix": "models/race_4/",
    "param_names": ["v_0", "v_1", "v_2", "v_3", "a", "w_0", "w_1", "w_2", "w_3", "ndt"],
    "param_depends_on_n_choice": [1, 0, 1, 0],
    "boundary_param_names": [],
    "param_bounds_network":[[0, 2.0], [0, 2.0], [0, 2.0], [0, 2.0], [1.0, 3.0], [0.2, 0.8], [0.2, 0.8], [0.2, 0.8], [0.2, 0.8], [0.0, 1.0]],
    "param_bounds_sampler": [[0.1, 1.9], [0.1, 1.9], [0.1, 1.9], [0.1, 1.9], [1.1, 2.9], [0.21, 0.79], [0.21, 0.79], [0.21, 0.79], [0.21, 0.79],[0.1, 0.9]],
    "param_bounds_cnn": [[0.0, 2.5], [0.0, 2.5], [0.0, 2.5], [0.0, 2.5], [1.0, 3.0], [0.1, 0.9], [0.1, 0.9], [0.1, 0.9], [0.1, 0.9], [0.0, 2.0]],
    "boundary_param_bounds_network": [],
    "boundary_param_bounds_sampler": [],
    "boundary_param_bounds_cnn": [],
    "dgp_hyperparameters": dict([['s', 1.0], 
                            ['delta_t', 0.01], 
                            ['max_t', 20], 
                            ['n_samples', 20000], 
                            ['print_info', False],
                            ['boundary', bf.constant],
                            ['boundary_multiplicative', True],
                            ['possible_choices', [0, 1, 2, 3]]]),
},
"lca_3":{
    "dgp": cd.lca,
    "boundary": bf.constant,
    "boundary_multiplicative": True,
    "folder_suffix": "models/lca_3/",
    "param_names": ['v_0', 'v_1', 'v_2', 'a', 'w_0', 'w_1', 'w_2', 'g', 'b', 'ndt'],
    "param_depends_on_n_choice": [1, 0, 1, 0, 0, 0],
    "boundary_param_names": [],
    "param_bounds_network": [[0, 2.0], [0, 2.0], [0, 2.0], [1.0, 3.0], [0.2, 0.8],  [0.2, 0.8],  [0.2, 0.8], [-1.0, 1.0], [-1.0, 1.0], [0.0, 1.0]],
    "param_bounds_sampler": [[0, 2.0], [0, 2.0], [0, 2.0], [1.0, 3.0], [0.2, 0.8], [0.2, 0.8], [0.2, 0.8], [-0.9, 0.9], [-0.9, 0.9], [0.05, 0.95]],
    "param_bounds_cnn": [[0, 2.5], [0, 2.5], [0, 2.5], [1.0, 3.0], [0.1, 0.9], [0.1, 0.9], [0.1, 0.9], [-1.0, 1.0], [-1.0, 1.0], [0.0, 2.0]],
    "boundary_param_bounds_cnn": [],
    "boundary_param_bounds_network": [],
    "boundary_param_bounds_sampler": [],
    "dgp_hyperparameters": dict([['s', 1.0], 
                            ['delta_t', 0.01], 
                            ['max_t', 20], 
                            ['n_samples', 20000], 
                            ['print_info', False],
                            ['boundary', bf.constant],
                            ['boundary_multiplicative', True],
                            ['possible_choices', [0, 1, 2]]]),
},
"lca_4":{
    "dgp": cd.lca,
    "boundary": bf.constant,
    "boundary_multiplicative": True,
    "folder_suffix": "models/lca_4/",
    "param_names": ['v_0', 'v_1', 'v_2', 'v_3', 'a', 'w_0', 'w_1', 'w_2', 'w_3', 'g', 'b', 'ndt'],
    "param_depends_on_n_choice": [1, 0, 1, 0, 0, 0],
    "boundary_param_names": [],
    "param_bounds_network": [[0, 2.0], [0, 2.0], [0, 2.0], [0, 2.0], [1.0, 3.0], [0.2, 0.8], [0.2, 0.8], [0.2, 0.8], [0.2, 0.8], [-1.0, 1.0], [-1.0, 1.0], [0.0, 1.0]],
    "param_bounds_sampler": [[0, 2.0], [0, 2.0], [0, 2.0], [0, 2.0], [1.0, 3.0], [0.2, 0.8], [0.2, 0.8], [0.2, 0.8], [0.2, 0.8], [-0.9, 0.9], [-0.9, 0.9], [0.05, 0.95]],
    "param_bounds_cnn": [[0, 2.5], [0, 2.5], [0, 2.5], [0, 2.5], [1.0, 3.0], [0.1, 0.9],  [0.1, 0.9],  [0.1, 0.9],  [0.1, 0.9], [-1.0, 1.0], [-1.0, 1.0], [0.0, 2.0]],
    "boundary_param_bounds_cnn": [],
    "boundary_param_bounds_network": [],
    "boundary_param_bounds_sampler": [],
    "dgp_hyperparameters": dict([['s', 1.0], 
                            ['delta_t', 0.01], 
                            ['max_t', 20], 
                            ['n_samples', 20000], 
                            ['print_info', False],
                            ['boundary', bf.constant],
                            ['boundary_multiplicative', True],
                            ['possible_choices', [0, 1, 2, 3]]]),
},


"ddm_seq2":{
    "dgp": cd.ddm_flexbound_seq2,
    "boundary": bf.constant,
    "boundary_multiplicative": True,
    "folder_suffix": "models/ddm_seq2/",
    "param_names": ['v_h', 'v_l_1', 'v_l_2', 'a', 'w_h', 'w_l_1', 'w_l_2', 'ndt'],
    "param_depends_on_n_choice": [0, 0, 0, 0, 0, 0, 0, 0],
    "boundary_param_names": [],
    "param_bounds_network": [[-2.0, 2.0], [-2.0, 2.0], [-2.0, 2.0],
                             [0.3, 2], [0.2, 0.8], [0.2, 0.8], [0.2, 0.8],[0.0, 2.0]],
    "param_bounds_sampler": [[-1.9, 1.9], [0.6, 1.4], [0.31, 0.69], [0.1, 0.9]],
    "param_bounds_cnn": [[-2.5, 2.5], [-2.5, 2.5], [-2.5, 2.5],
                         [0.2, 2], [0.1, 0.9], [0.1, 0.9], [0.1, 0.9], [0.0, 2.0]],
    "boundary_param_bounds_network": [],
    "boundary_param_bounds_sampler": [],
    "boundary_param_bounds_cnn":[],
    "dgp_hyperparameters": dict([['s', 1.0], 
                            ['delta_t', 0.01], 
                            ['max_t', 20], 
                            ['n_samples', 20000], 
                            ['print_info', False],
                            ['boundary', bf.constant],
                            ['boundary_multiplicative', True],
                            ['possible_choices', [0, 1, 2, 3]]]),
    },
"ddm_seq2_angle":{
    "dgp": cd.ddm_flexbound_seq2,
    "boundary": bf.angle,
    "boundary_multiplicative": False,
    "folder_suffix": "models/ddm_seq2_angle/",
    "param_names": ['v_h', 'v_l_1', 'v_l_2', 'a', 'w_h', 'w_l_1', 'w_l_2', 'ndt'],
    "param_depends_on_n_choice": [0, 0, 0, 0, 0, 0, 0, 0],
    "boundary_param_names": ['theta'],
    "param_bounds_network": [[-2.0, 2.0], [-2.0, 2.0], [-2.0, 2.0],
                             [0.3, 2], [0.2, 0.8], [0.2, 0.8], [0.2, 0.8],[0.0, 2.0]],
    "param_bounds_sampler": [[-1.9, 1.9], [0.6, 1.4], [0.31, 0.69], [0.1, 0.9]],
    "param_bounds_cnn": [[-2.5, 2.5], [-2.5, 2.5], [-2.5, 2.5],
                         [0.2, 2], [0.1, 0.9], [0.1, 0.9], [0.1, 0.9], [0.0, 2.0]],
    "boundary_param_bounds_network":[[0, (np.pi / 2 - .2)]],
    "boundary_param_bounds_sampler": [[0.05, np.pi / 2 - .3]],
    "boundary_param_bounds_cnn": [[0, (np.pi / 2 - .2)]],
    "dgp_hyperparameters": dict([['s', 1.0], 
                            ['delta_t', 0.01], 
                            ['max_t', 20], 
                            ['n_samples', 20000], 
                            ['print_info', False],
                            ['boundary', bf.angle],
                            ['boundary_multiplicative', False],
                            ['possible_choices', [0, 1, 2, 3]]]),
    },
"ddm_par2":{
    "dgp": cd.ddm_flexbound_par2,
    "boundary": bf.constant,
    "boundary_multiplicative": True,
    "folder_suffix": "models/ddm_par2/",
    "param_names": ['v_h', 'v_l_1', 'v_l_2', 'a', 'w_h', 'w_l_1', 'w_l_2', 'ndt'],
    "param_depends_on_n_choice": [0, 0, 0, 0, 0, 0, 0, 0],
    "boundary_param_names": [],
    "param_bounds_network": [[-2.0, 2.0], [-2.0, 2.0], [-2.0, 2.0],
                             [0.3, 2], [0.2, 0.8], [0.2, 0.8], [0.2, 0.8],[0.0, 2.0]],
    "param_bounds_sampler": [[-1.9, 1.9], [0.6, 1.4], [0.31, 0.69], [0.1, 0.9]],
    "param_bounds_cnn": [[-2.5, 2.5], [-2.5, 2.5], [-2.5, 2.5],
                         [0.2, 2], [0.1, 0.9], [0.1, 0.9], [0.1, 0.9], [0.0, 2.0]],
    "boundary_param_bounds_network": [],
    "boundary_param_bounds_sampler": [],
    "boundary_param_bounds_cnn":[],
    "dgp_hyperparameters": dict([['s', 1.0], 
                            ['delta_t', 0.01], 
                            ['max_t', 20], 
                            ['n_samples', 20000], 
                            ['print_info', False],
                            ['boundary', bf.constant],
                            ['boundary_multiplicative', True],
                            ['possible_choices', [0, 1, 2, 3]]]),
    },
"ddm_par2_angle":{
    "dgp": cd.ddm_flexbound_par2,
    "boundary": bf.angle,
    "boundary_multiplicative": False,
    "folder_suffix": "models/ddm_par2_angle/",
    "param_names": ['v_h', 'v_l_1', 'v_l_2', 'a', 'w_h', 'w_l_1', 'w_l_2', 'ndt'],
    "param_depends_on_n_choice": [0, 0, 0, 0, 0, 0, 0, 0],
    "boundary_param_names": ['theta'],
    "param_bounds_network": [[-2.0, 2.0], [-2.0, 2.0], [-2.0, 2.0],
                             [0.3, 2], [0.2, 0.8], [0.2, 0.8], [0.2, 0.8],[0.0, 2.0]],
    "param_bounds_sampler": [[-1.9, 1.9], [0.6, 1.4], [0.31, 0.69], [0.1, 0.9]],
    "param_bounds_cnn": [[-2.5, 2.5], [-2.5, 2.5], [-2.5, 2.5],
                         [0.2, 2], [0.1, 0.9], [0.1, 0.9], [0.1, 0.9], [0.0, 2.0]],
    "boundary_param_bounds_network":[[0, (np.pi / 2 - .2)]],
    "boundary_param_bounds_sampler": [[0.05, np.pi / 2 - .3]],
    "boundary_param_bounds_cnn": [[0, (np.pi / 2 - .2)]],
    "dgp_hyperparameters": dict([['s', 1.0], 
                            ['delta_t', 0.01], 
                            ['max_t', 20], 
                            ['n_samples', 20000], 
                            ['print_info', False],
                            ['boundary', bf.angle],
                            ['boundary_multiplicative', False],
                            ['possible_choices', [0, 1, 2, 3]]]),
    },
"ddm_mic2":{
    "dgp": cd.ddm_flexbound_mic2,
    "boundary": bf.constant,
    "boundary_multiplicative": True,
    "folder_suffix": "models/ddm_mic2/",
    "param_names": ['v_h', 'v_l_1', 'v_l_2', 'a', 'w_h', 'w_l_1', 'w_l_2', 'd' ,'ndt'],
    "param_depends_on_n_choice": [0, 0, 0, 0, 0, 0, 0, 0, 0],
    "boundary_param_names": [],
    "param_bounds_network": [[-2.0, 2.0], [-2.0, 2.0], [-2.0, 2.0],
                             [0.3, 2], [0.2, 0.8], [0.2, 0.8], [0.2, 0.8], [0.0, 1.0], [0.0, 2.0]],
    "param_bounds_sampler": [[-1.9, 1.9], [0.6, 1.4], [0.31, 0.69], [0.1, 0.9]],
    "param_bounds_cnn": [[-2.5, 2.5], [-2.5, 2.5], [-2.5, 2.5],
                            [0.2, 2], [0.1, 0.9], [0.1, 0.9], [0.1, 0.9], [0.0, 1.0], [0.0, 2.0]],
    "boundary_param_bounds_network": [],
    "boundary_param_bounds_sampler": [],
    "boundary_param_bounds_cnn":[],
    "dgp_hyperparameters": dict([['s', 1.0], 
                            ['delta_t', 0.01], 
                            ['max_t', 20], 
                            ['n_samples', 20000], 
                            ['print_info', False],
                            ['boundary', bf.constant],
                            ['boundary_multiplicative', True],
                            ['possible_choices', [0, 1, 2, 3]]]),
    },
"ddm_mic2_angle":{
    "dgp": cd.ddm_flexbound_mic2,
    "boundary": bf.angle,
    "boundary_multiplicative": False,
    "folder_suffix": "models/ddm_mic2_angle/",
    "param_names": ['v_h', 'v_l_1', 'v_l_2', 'a', 'w_h', 'w_l_1', 'w_l_2', 'd' ,'ndt'],
    "param_depends_on_n_choice": [0, 0, 0, 0, 0, 0, 0, 0, 0],
    "boundary_param_names": ['theta'],
    "param_bounds_network": [[-2.0, 2.0], [-2.0, 2.0], [-2.0, 2.0],
                             [0.3, 2], [0.2, 0.8], [0.2, 0.8], [0.2, 0.8], [0.0, 1.0], [0.0, 2.0]],
    "param_bounds_sampler": [[-1.9, 1.9], [0.6, 1.4], [0.31, 0.69], [0.1, 0.9]],
    "param_bounds_cnn": [[-2.5, 2.5], [-2.5, 2.5], [-2.5, 2.5],
                            [0.2, 2], [0.1, 0.9], [0.1, 0.9], [0.1, 0.9], [0.0, 1.0], [0.0, 2.0]],
    "boundary_param_bounds_network":[[0, (np.pi / 2 - .2)]],
    "boundary_param_bounds_sampler": [[0.05, np.pi / 2 - .3]],
    "boundary_param_bounds_cnn": [[0, (np.pi / 2 - .2)]],
    "dgp_hyperparameters": dict([['s', 1.0], 
                            ['delta_t', 0.001], 
                            ['max_t', 20], 
                            ['n_samples', 20000], 
                            ['print_info', False],
                            ['boundary', bf.angle],
                            ['boundary_multiplicative', False],
                            ['possible_choices', [0, 1, 2, 3]]]),
    },
}